tx_imageopt {
    directories = typo3temp/pics*jpg|gif|png,typo3temp/GB*jpg|gif|png,typo3temp/assets/images*jpg|gif|png,

    optimize {
        default {
            chain {
                10.providerType = lossyLow
                20.providerType = lossless
            }

            fileRegexp = .*
            outputFilename = {dirname}/{filename}.{extension}
        }

        webp {
            chain {
                10.providerType = webp
            }
            fileRegexp = \.(jpg|jpeg|png)$
            outputFilename = {dirname}/{filename}.{extension}.webp
        }

        highQuality {
            chain {
                10.providerType = lossyGood
                20.providerType = lossless
            }
            fileRegexp = .*
            outputFilename = {dirname}/{filename}-hg.{extension}
        }
    }

    executorsDefault {
        /* not supported yet
        notifications {
        limitsExeeded {
        active = 1
        }
        }
        */
    }

    providersDefault {
        /* not supported yet
        email {
        sender {
        email =
        name =
        }
        reciver {
        email =
        name =
        }
        }
        */
    }

    providers {
        webp {
            type = webp
            fileType = jpeg,png
            executors {
                10 {
                    class = SourceBroker\Imageopt\Executor\OptimizationExecutorShell
                    command {
                        mask = {executable} {tempFile} webp:{tempFile}
                        exec = convert
                    }
                }
            }
        }

        jpegoptim {
            type = lossyGood,lossyLow
            fileType = jpeg
            typeOverride.lossyLow.executors.10.options.quality.value = lossyLow
            typeOverride.lossyGood.executors.10.options.quality.value = lossyGood
            executors {
                10 {
                    class = SourceBroker\Imageopt\Executor\OptimizationExecutorShell
                    command {
                        mask = {executable} {tempFile} -o --strip-all {quality}
                        exec = jpegoptim
                    }
                    options {
                        quality {
                            options {
                                lossyLow = --max=1
                                lossyGood = --max=85
                            }
                        }
                    }
                }
            }
        }

        jpegrescan {
            type = lossless
            fileType = jpeg
            executors {
                10 {
                    class = SourceBroker\Imageopt\Executor\OptimizationExecutorShell
                    command {
                        mask = {executable} -s {tempFile} {tempFile}
                        exec = jpegrescan
                    }
                }
            }
        }

        jpegtran {
            type = lossless
            fileType = jpeg
            executors {
                10 {
                    class = SourceBroker\Imageopt\Executor\OptimizationExecutorShell
                    command {
                        mask = {executable} -copy none -optimize -outfile {tempFile} {tempFile}
                        exec = jpegtran
                    }
                }
            }
        }

        jpegtranMozjpeg {
            type = lossless
            fileType = jpeg
            executors {
                10 {
                    class = SourceBroker\Imageopt\Executor\OptimizationExecutorShell
                    command {
                        mask = {executable} -copy none -optimize -outfile {tempFile} {tempFile}
                        exec = mozjpeg-jpegtran
                    }
                }
            }
        }

        mozjpeg {
            type = lossyLow,lossyGood
            typeOverride.lossyLow.executors.10.options.quality.value = lossyLow
            typeOverride.lossyGood.executors.10.options.quality.value = lossyGood
            fileType = jpeg
            executors {
                10 {
                    class = SourceBroker\Imageopt\Executor\OptimizationExecutorShell
                    command {
                        mask = {executable} -tune-hvs-psnr {quality} -optimize -outfile {tempFile}_tmp {tempFile}
                        exec = mozjpeg-cjpeg
                    }
                    options {
                        quality {
                            options {
                                lossyLow = -quality 6
                                lossyGood = -quality 85
                            }
                        }
                    }
                }
                # cjpeg can not ouput to the same file so we need to use {tempFile}_tmp and then cp to {tempFile}
                20 {
                    class = SourceBroker\Imageopt\Executor\OptimizationExecutorShell
                    command {
                        mask = {executable} -f {tempFile}_tmp {tempFile}
                        exec = cp
                    }
                }
            }
        }

        gifsicle {
            type = lossless
            fileType = gif
            executors {
                10 {
                    class = SourceBroker\Imageopt\Executor\OptimizationExecutorShell
                    command {
                        mask = {executable} --optimize=3 {tempFile} -o {tempFile}
                        exec = gifsicle
                    }
                }
            }
        }

        optipng {
            type = lossless
            fileType = png
            executors {
                10 {
                    class = SourceBroker\Imageopt\Executor\OptimizationExecutorShell
                    command {
                        mask = {executable} {tempFile} -quiet -strip all -o7
                        exec = optipng
                    }
                }
            }
        }

        pngcrush {
            type = lossless
            fileType = png
            executors {
                10 {
                    class = SourceBroker\Imageopt\Executor\OptimizationExecutorShell
                    command {
                        mask = {executable} -s -rem alla -brute -reduce -ow {tempFile} >/dev/null
                        exec = pngcrush
                    }
                }
            }
        }

        pngquant {
            type = lossyLow,lossyGood
            typeOverride.lossyLow.executors.10.options.quality.value = lossyLow
            typeOverride.lossyGood.executors.10.options.quality.value = lossyGood
            fileType = png
            executors {
                10 {
                    class = SourceBroker\Imageopt\Executor\OptimizationExecutorShell
                    command {
                        mask = {executable} {tempFile} --force --ext '' --strip {quality}
                        exec = pngquant
                        successfulExitStatus = 98
                    }
                    options {
                        quality {
                            options {
                                lossyLow = --speed 11 --quality 1
                                lossyGood = --speed 1
                            }
                        }
                    }
                }
            }
        }

        pngquantPngcrush {
            type = lossyLow,lossyGood
            fileType = png
            executors {
                10 < tx_imageopt.providers.pngquant.executors.10
                20 < tx_imageopt.providers.pngcrush.executors.10
            }
        }

        kraken {
            type = lossyLow,lossyGood,lossless
            // do not set for "number" quality becase kraken inteligent optimisation - its enough to make "lossy = true"
            typeOverride.lossyGood.executors.10.api.options.lossy = true
            typeOverride.lossyLow.executors.10.api.options.quality = 6
            fileType = jpeg,png,gif
            executors {
                10 {
                    class = SourceBroker\Imageopt\Executor\OptimizationExecutorRemoteKraken
                    api {
                        url {
                            upload = https://api.kraken.io/v1/upload
                        }
                        auth {
                            key =
                            pass =
                        }
                    }
                }
            }
        }

        tinypng {
            // tinypng has no way to force quality of loosles so it can not be provider for "lossyLow" quality
            type = lossyGood
            fileType = jpeg,png
            executors {
                10 {
                    class = SourceBroker\Imageopt\Executor\OptimizationExecutorRemoteTinypng
                    api {
                        url {
                            upload = https://api.tinify.com/shrink
                        }
                        auth {
                            key =
                            pass =
                        }
                    }
                }
            }
        }

        imageoptim {
            type = lossyLow,lossyGood,lossless
            typeOverride.lossless.executors.10.options.quality.value = lossless
            typeOverride.lossyLow.executors.10.options.quality.value = lossyLow
            typeOverride.lossyGood.executors.10.options.quality.value = lossyGood
            fileType = jpeg,png,gif
            executors {
                10 {
                    class = SourceBroker\Imageopt\Executor\OptimizationExecutorRemoteImageoptim
                    api {
                        url {
                            upload = https://im2.io
                        }
                        auth {
                            key =
                            pass =
                        }
                        options {
                            10 = full
                        }
                    }
                    options {
                        quality {
                            options {
                                lossyLow = low
                                lossyGood = high
                                lossless = lossless
                            }
                        }
                    }
                }
            }
        }
    }
}
